name: Build and Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  YOUR_IMAGE_NAME: easydeploy
  YOUR_IMAGE_TAG: latest
  YOUR_ECR_REPOSITORY: easydeploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and Deploy
        run: |
          cd .  # Replace with your application's directory
          echo "My Cluster Name: ${{ env.AWS_ECS_CLUSTER_STAGE }}"
          #aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 387232581030.dkr.ecr.us-east-1.amazonaws.com
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t ${{ env.YOUR_IMAGE_NAME }}:${{ env.YOUR_IMAGE_TAG }} .
          docker tag ${{ env.YOUR_IMAGE_NAME }}:${{ env.YOUR_IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.YOUR_ECR_REPOSITORY }}:${{ env.YOUR_IMAGE_TAG }}
          #docker tag ${{ env.YOUR_IMAGE_NAME }}:${{ env.YOUR_IMAGE_TAG }} ${{ env.YOUR_IMAGE_NAME }}:${{ env.YOUR_IMAGE_TAG }}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.YOUR_ECR_REPOSITORY }}:${{ env.YOUR_IMAGE_TAG }}
          #docker push ${{ env.YOUR_IMAGE_NAME }}:${{ env.YOUR_IMAGE_TAG }}:${CODEBUILD_RESOLVED_SOURCE_VERSION}
          sudo apt install python3-pip -y
          sudo pip3 install ecs-deploy
          #ecs deploy --timeout 1200 --region ${{ env.REGION }} ${{ env.AWS_ECS_CLUSTER_STAGE }} ${{ env.AWS_ECS_SERVICE_STAGE }} --tag latest
          #ecs deploy --timeout 1200 --region us-east-1 easytest easytest --tag latest
          #aws ecs update-service --cluster easytest --service easytest --force-new-deployment
